// <auto-generated />
using Mgeek.Services.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mgeek.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230919130831_updateStock")]
    partial class updateStock
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ProductSequence");

            modelBuilder.Entity("Mgeek.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ProductSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecondImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Mgeek.Services.ProductAPI.Models.Stock", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasAnnotation("MinValue", 0);

                    b.HasKey("ProductId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Mgeek.Services.ProductAPI.Models.Laptop", b =>
                {
                    b.HasBaseType("Mgeek.Services.ProductAPI.Models.Product");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Diagonal")
                        .HasColumnType("float");

                    b.Property<string>("Gpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<int>("Rom")
                        .HasColumnType("int");

                    b.Property<string>("ScreenResolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Laptops");
                });

            modelBuilder.Entity("Mgeek.Services.ProductAPI.Models.Smartphone", b =>
                {
                    b.HasBaseType("Mgeek.Services.ProductAPI.Models.Product");

                    b.Property<int>("Battery")
                        .HasColumnType("int");

                    b.Property<int>("CameraPixels")
                        .HasColumnType("int");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Diagonal")
                        .HasColumnType("float");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<int>("Rom")
                        .HasColumnType("int");

                    b.ToTable("Smartphones");
                });

            modelBuilder.Entity("Mgeek.Services.ProductAPI.Models.Stock", b =>
                {
                    b.HasOne("Mgeek.Services.ProductAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
